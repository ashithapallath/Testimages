import cv2
import numpy as np
import matplotlib.pyplot as plt

# Function to apply log transformation to an image
def log_transform(image, c):
    # Apply log transformation: S = c * log(1 + I)
    # Convert to float32 to avoid overflow during log operation
    image_log = c * np.log(1 + image)
    # Normalize to the range [0, 255]
    image_log = np.uint8(np.clip(image_log, 0, 255))
    return image_log

# Load a sample grayscale image
image = cv2.imread('/content/lenna.png', cv2.IMREAD_GRAYSCALE)  # Replace with your image path

# Create a narrow range of low gray-level values (dark image)
dark_image = np.uint8(image * 0.3)  # Scale image to create a darker version

# Apply log transformation with different constant values
log_image_c1 = log_transform(dark_image, c=1)
log_image_c2 = log_transform(dark_image, c=10)
log_image_c3 = log_transform(dark_image, c=50)

# Display original image, log-transformed images, and histograms
plt.figure(figsize=(12, 18))

# ROW 1: Original dark image and its histogram
plt.subplot(3, 4, 1)
plt.imshow(dark_image, cmap='gray')
plt.title("Dark Image")
plt.axis('off')

plt.subplot(3, 4, 2)
plt.hist(dark_image.ravel(), bins=256, range=(0, 256), color='blue', alpha=0.7)
plt.title("Histogram of Dark Image")
plt.xlabel("Pixel Intensity")
plt.ylabel("Frequency")

# ROW 2: Log-transformed image with c=1, its histogram
plt.subplot(3, 4, 3)
plt.imshow(log_image_c1, cmap='gray')
plt.title("Log Transform (c=1)")
plt.axis('off')

plt.subplot(3, 4, 4)
plt.hist(log_image_c1.ravel(), bins=256, range=(0, 256), color='green', alpha=0.7)
plt.title("Histogram of Log Transform (c=1)")
plt.xlabel("Pixel Intensity")
plt.ylabel("Frequency")

# ROW 3: Log-transformed images with different values of 'c', their histograms
plt.subplot(3, 4, 5)
plt.imshow(log_image_c2, cmap='gray')
plt.title("Log Transform (c=10)")
plt.axis('off')

plt.subplot(3, 4, 6)
plt.hist(log_image_c2.ravel(), bins=256, range=(0, 256), color='red', alpha=0.7)
plt.title("Histogram of Log Transform (c=10)")
plt.xlabel("Pixel Intensity")
plt.ylabel("Frequency")

plt.subplot(3, 4, 7)
plt.imshow(log_image_c3, cmap='gray')
plt.title("Log Transform (c=50)")
plt.axis('off')

plt.subplot(3, 4, 8)
plt.hist(log_image_c3.ravel(), bins=256, range=(0, 256), color='purple', alpha=0.7)
plt.title("Histogram of Log Transform (c=50)")
plt.xlabel("Pixel Intensity")
plt.ylabel("Frequency")

# Show the plots
plt.tight_layout()
plt.show()
